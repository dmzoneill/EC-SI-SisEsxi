(vim.host.NetworkConfig) {
   dynamicType = <unset>, 
   vswitch = (vim.host.VirtualSwitch.Config) [
      (vim.host.VirtualSwitch.Config) {
         dynamicType = <unset>, 
         changeOperation = <unset>, 
         name = "vSwitch0", 
         spec = (vim.host.VirtualSwitch.Specification) {
            dynamicType = <unset>, 
            numPorts = 128, 
            bridge = (vim.host.VirtualSwitch.BondBridge) {
               dynamicType = <unset>, 
               nicDevice = (string) [
                  "vmnic0"
               ], 
               beacon = (vim.host.VirtualSwitch.BeaconConfig) {
                  dynamicType = <unset>, 
                  interval = 1, 
               }, 
               linkDiscoveryProtocolConfig = (vim.host.LinkDiscoveryProtocolConfig) {
                  dynamicType = <unset>, 
                  protocol = "cdp", 
                  operation = "listen", 
               }, 
            }, 
            policy = (vim.host.NetworkPolicy) {
               dynamicType = <unset>, 
               security = (vim.host.NetworkPolicy.SecurityPolicy) {
                  dynamicType = <unset>, 
                  allowPromiscuous = false, 
                  macChanges = true, 
                  forgedTransmits = true, 
               }, 
               nicTeaming = (vim.host.NetworkPolicy.NicTeamingPolicy) {
                  dynamicType = <unset>, 
                  policy = "loadbalance_srcid", 
                  reversePolicy = true, 
                  notifySwitches = true, 
                  rollingOrder = false, 
                  failureCriteria = (vim.host.NetworkPolicy.NicFailureCriteria) {
                     dynamicType = <unset>, 
                     checkSpeed = "minimum", 
                     speed = 10, 
                     checkDuplex = false, 
                     fullDuplex = false, 
                     checkErrorPercent = false, 
                     percentage = 0, 
                     checkBeacon = false, 
                  }, 
                  nicOrder = (vim.host.NetworkPolicy.NicOrderPolicy) {
                     dynamicType = <unset>, 
                     activeNic = (string) [
                        "vmnic0"
                     ], 
                  }, 
               }, 
               offloadPolicy = (vim.host.NetOffloadCapabilities) {
                  dynamicType = <unset>, 
                  csumOffload = true, 
                  tcpSegmentation = true, 
                  zeroCopyXmit = true, 
               }, 
               shapingPolicy = (vim.host.NetworkPolicy.TrafficShapingPolicy) {
                  dynamicType = <unset>, 
                  enabled = false, 
                  averageBandwidth = <unset>, 
                  peakBandwidth = <unset>, 
                  burstSize = <unset>, 
               }, 
            }, 
            mtu = <unset>, 
         }, 
      }, 
      (vim.host.VirtualSwitch.Config) {
         dynamicType = <unset>, 
         changeOperation = <unset>, 
         name = "vSwitch1", 
         spec = (vim.host.VirtualSwitch.Specification) {
            dynamicType = <unset>, 
            numPorts = 128, 
            bridge = (vim.host.VirtualSwitch.BondBridge) {
               dynamicType = <unset>, 
               nicDevice = (string) [
                  "vmnic2"
               ], 
               beacon = (vim.host.VirtualSwitch.BeaconConfig) {
                  dynamicType = <unset>, 
                  interval = 1, 
               }, 
               linkDiscoveryProtocolConfig = (vim.host.LinkDiscoveryProtocolConfig) {
                  dynamicType = <unset>, 
                  protocol = "cdp", 
                  operation = "listen", 
               }, 
            }, 
            policy = (vim.host.NetworkPolicy) {
               dynamicType = <unset>, 
               security = (vim.host.NetworkPolicy.SecurityPolicy) {
                  dynamicType = <unset>, 
                  allowPromiscuous = false, 
                  macChanges = true, 
                  forgedTransmits = true, 
               }, 
               nicTeaming = (vim.host.NetworkPolicy.NicTeamingPolicy) {
                  dynamicType = <unset>, 
                  policy = "loadbalance_srcid", 
                  reversePolicy = true, 
                  notifySwitches = true, 
                  rollingOrder = false, 
                  failureCriteria = (vim.host.NetworkPolicy.NicFailureCriteria) {
                     dynamicType = <unset>, 
                     checkSpeed = "minimum", 
                     speed = 10, 
                     checkDuplex = false, 
                     fullDuplex = false, 
                     checkErrorPercent = false, 
                     percentage = 0, 
                     checkBeacon = false, 
                  }, 
                  nicOrder = (vim.host.NetworkPolicy.NicOrderPolicy) {
                     dynamicType = <unset>, 
                     activeNic = (string) [
                        "vmnic2"
                     ], 
                  }, 
               }, 
               offloadPolicy = (vim.host.NetOffloadCapabilities) {
                  dynamicType = <unset>, 
                  csumOffload = true, 
                  tcpSegmentation = true, 
                  zeroCopyXmit = true, 
               }, 
               shapingPolicy = (vim.host.NetworkPolicy.TrafficShapingPolicy) {
                  dynamicType = <unset>, 
                  enabled = false, 
                  averageBandwidth = <unset>, 
                  peakBandwidth = <unset>, 
                  burstSize = <unset>, 
               }, 
            }, 
            mtu = <unset>, 
         }, 
      }, 
      (vim.host.VirtualSwitch.Config) {
         dynamicType = <unset>, 
         changeOperation = <unset>, 
         name = "vSwitch2", 
         spec = (vim.host.VirtualSwitch.Specification) {
            dynamicType = <unset>, 
            numPorts = 128, 
            bridge = (vim.host.VirtualSwitch.BondBridge) {
               dynamicType = <unset>, 
               nicDevice = (string) [
                  "vmnic1"
               ], 
               beacon = (vim.host.VirtualSwitch.BeaconConfig) {
                  dynamicType = <unset>, 
                  interval = 1, 
               }, 
               linkDiscoveryProtocolConfig = (vim.host.LinkDiscoveryProtocolConfig) {
                  dynamicType = <unset>, 
                  protocol = "cdp", 
                  operation = "listen", 
               }, 
            }, 
            policy = (vim.host.NetworkPolicy) {
               dynamicType = <unset>, 
               security = (vim.host.NetworkPolicy.SecurityPolicy) {
                  dynamicType = <unset>, 
                  allowPromiscuous = false, 
                  macChanges = true, 
                  forgedTransmits = true, 
               }, 
               nicTeaming = (vim.host.NetworkPolicy.NicTeamingPolicy) {
                  dynamicType = <unset>, 
                  policy = "loadbalance_srcid", 
                  reversePolicy = true, 
                  notifySwitches = true, 
                  rollingOrder = false, 
                  failureCriteria = (vim.host.NetworkPolicy.NicFailureCriteria) {
                     dynamicType = <unset>, 
                     checkSpeed = "minimum", 
                     speed = 10, 
                     checkDuplex = false, 
                     fullDuplex = false, 
                     checkErrorPercent = false, 
                     percentage = 0, 
                     checkBeacon = false, 
                  }, 
                  nicOrder = (vim.host.NetworkPolicy.NicOrderPolicy) {
                     dynamicType = <unset>, 
                     activeNic = (string) [
                        "vmnic1"
                     ], 
                  }, 
               }, 
               offloadPolicy = (vim.host.NetOffloadCapabilities) {
                  dynamicType = <unset>, 
                  csumOffload = true, 
                  tcpSegmentation = true, 
                  zeroCopyXmit = true, 
               }, 
               shapingPolicy = (vim.host.NetworkPolicy.TrafficShapingPolicy) {
                  dynamicType = <unset>, 
                  enabled = false, 
                  averageBandwidth = <unset>, 
                  peakBandwidth = <unset>, 
                  burstSize = <unset>, 
               }, 
            }, 
            mtu = <unset>, 
         }, 
      }
   ], 
   portgroup = (vim.host.PortGroup.Config) [
      (vim.host.PortGroup.Config) {
         dynamicType = <unset>, 
         changeOperation = <unset>, 
         spec = (vim.host.PortGroup.Specification) {
            dynamicType = <unset>, 
            name = "Management Network", 
            vlanId = 0, 
            vswitchName = "vSwitch0", 
            policy = (vim.host.NetworkPolicy) {
               dynamicType = <unset>, 
               security = (vim.host.NetworkPolicy.SecurityPolicy) {
                  dynamicType = <unset>, 
                  allowPromiscuous = <unset>, 
                  macChanges = <unset>, 
                  forgedTransmits = <unset>, 
               }, 
               nicTeaming = (vim.host.NetworkPolicy.NicTeamingPolicy) {
                  dynamicType = <unset>, 
                  policy = "loadbalance_srcid", 
                  reversePolicy = true, 
                  notifySwitches = true, 
                  rollingOrder = false, 
                  failureCriteria = (vim.host.NetworkPolicy.NicFailureCriteria) {
                     dynamicType = <unset>, 
                     checkSpeed = "minimum", 
                     speed = 10, 
                     checkDuplex = false, 
                     fullDuplex = false, 
                     checkErrorPercent = false, 
                     percentage = 0, 
                     checkBeacon = false, 
                  }, 
                  nicOrder = (vim.host.NetworkPolicy.NicOrderPolicy) {
                     dynamicType = <unset>, 
                     activeNic = (string) [
                        "vmnic0"
                     ], 
                  }, 
               }, 
               offloadPolicy = (vim.host.NetOffloadCapabilities) {
                  dynamicType = <unset>, 
                  csumOffload = <unset>, 
                  tcpSegmentation = <unset>, 
                  zeroCopyXmit = <unset>, 
               }, 
               shapingPolicy = (vim.host.NetworkPolicy.TrafficShapingPolicy) {
                  dynamicType = <unset>, 
                  enabled = <unset>, 
                  averageBandwidth = <unset>, 
                  peakBandwidth = <unset>, 
                  burstSize = <unset>, 
               }, 
            }, 
         }, 
      }, 
      (vim.host.PortGroup.Config) {
         dynamicType = <unset>, 
         changeOperation = <unset>, 
         spec = (vim.host.PortGroup.Specification) {
            dynamicType = <unset>, 
            name = "2761601_NIC1", 
            vlanId = 200, 
            vswitchName = "vSwitch1", 
            policy = (vim.host.NetworkPolicy) {
               dynamicType = <unset>, 
               security = (vim.host.NetworkPolicy.SecurityPolicy) {
                  dynamicType = <unset>, 
                  allowPromiscuous = <unset>, 
                  macChanges = <unset>, 
                  forgedTransmits = <unset>, 
               }, 
               nicTeaming = (vim.host.NetworkPolicy.NicTeamingPolicy) {
                  dynamicType = <unset>, 
                  policy = <unset>, 
                  reversePolicy = <unset>, 
                  notifySwitches = <unset>, 
                  rollingOrder = <unset>, 
                  failureCriteria = (vim.host.NetworkPolicy.NicFailureCriteria) {
                     dynamicType = <unset>, 
                     checkSpeed = <unset>, 
                     speed = <unset>, 
                     checkDuplex = <unset>, 
                     fullDuplex = <unset>, 
                     checkErrorPercent = <unset>, 
                     percentage = <unset>, 
                     checkBeacon = <unset>, 
                  }, 
                  nicOrder = (vim.host.NetworkPolicy.NicOrderPolicy) null, 
               }, 
               offloadPolicy = (vim.host.NetOffloadCapabilities) {
                  dynamicType = <unset>, 
                  csumOffload = <unset>, 
                  tcpSegmentation = <unset>, 
                  zeroCopyXmit = <unset>, 
               }, 
               shapingPolicy = (vim.host.NetworkPolicy.TrafficShapingPolicy) {
                  dynamicType = <unset>, 
                  enabled = <unset>, 
                  averageBandwidth = <unset>, 
                  peakBandwidth = <unset>, 
                  burstSize = <unset>, 
               }, 
            }, 
         }, 
      }, 
      (vim.host.PortGroup.Config) {
         dynamicType = <unset>, 
         changeOperation = <unset>, 
         spec = (vim.host.PortGroup.Specification) {
            dynamicType = <unset>, 
            name = "2745101_NIC1", 
            vlanId = 200, 
            vswitchName = "vSwitch1", 
            policy = (vim.host.NetworkPolicy) {
               dynamicType = <unset>, 
               security = (vim.host.NetworkPolicy.SecurityPolicy) {
                  dynamicType = <unset>, 
                  allowPromiscuous = <unset>, 
                  macChanges = <unset>, 
                  forgedTransmits = <unset>, 
               }, 
               nicTeaming = (vim.host.NetworkPolicy.NicTeamingPolicy) {
                  dynamicType = <unset>, 
                  policy = <unset>, 
                  reversePolicy = <unset>, 
                  notifySwitches = <unset>, 
                  rollingOrder = <unset>, 
                  failureCriteria = (vim.host.NetworkPolicy.NicFailureCriteria) {
                     dynamicType = <unset>, 
                     checkSpeed = <unset>, 
                     speed = <unset>, 
                     checkDuplex = <unset>, 
                     fullDuplex = <unset>, 
                     checkErrorPercent = <unset>, 
                     percentage = <unset>, 
                     checkBeacon = <unset>, 
                  }, 
                  nicOrder = (vim.host.NetworkPolicy.NicOrderPolicy) null, 
               }, 
               offloadPolicy = (vim.host.NetOffloadCapabilities) {
                  dynamicType = <unset>, 
                  csumOffload = <unset>, 
                  tcpSegmentation = <unset>, 
                  zeroCopyXmit = <unset>, 
               }, 
               shapingPolicy = (vim.host.NetworkPolicy.TrafficShapingPolicy) {
                  dynamicType = <unset>, 
                  enabled = <unset>, 
                  averageBandwidth = <unset>, 
                  peakBandwidth = <unset>, 
                  burstSize = <unset>, 
               }, 
            }, 
         }, 
      }, 
      (vim.host.PortGroup.Config) {
         dynamicType = <unset>, 
         changeOperation = <unset>, 
         spec = (vim.host.PortGroup.Specification) {
            dynamicType = <unset>, 
            name = "2464801_NIC1", 
            vlanId = 200, 
            vswitchName = "vSwitch1", 
            policy = (vim.host.NetworkPolicy) {
               dynamicType = <unset>, 
               security = (vim.host.NetworkPolicy.SecurityPolicy) {
                  dynamicType = <unset>, 
                  allowPromiscuous = <unset>, 
                  macChanges = <unset>, 
                  forgedTransmits = <unset>, 
               }, 
               nicTeaming = (vim.host.NetworkPolicy.NicTeamingPolicy) {
                  dynamicType = <unset>, 
                  policy = <unset>, 
                  reversePolicy = <unset>, 
                  notifySwitches = <unset>, 
                  rollingOrder = <unset>, 
                  failureCriteria = (vim.host.NetworkPolicy.NicFailureCriteria) {
                     dynamicType = <unset>, 
                     checkSpeed = <unset>, 
                     speed = <unset>, 
                     checkDuplex = <unset>, 
                     fullDuplex = <unset>, 
                     checkErrorPercent = <unset>, 
                     percentage = <unset>, 
                     checkBeacon = <unset>, 
                  }, 
                  nicOrder = (vim.host.NetworkPolicy.NicOrderPolicy) null, 
               }, 
               offloadPolicy = (vim.host.NetOffloadCapabilities) {
                  dynamicType = <unset>, 
                  csumOffload = <unset>, 
                  tcpSegmentation = <unset>, 
                  zeroCopyXmit = <unset>, 
               }, 
               shapingPolicy = (vim.host.NetworkPolicy.TrafficShapingPolicy) {
                  dynamicType = <unset>, 
                  enabled = <unset>, 
                  averageBandwidth = <unset>, 
                  peakBandwidth = <unset>, 
                  burstSize = <unset>, 
               }, 
            }, 
         }, 
      }, 
      (vim.host.PortGroup.Config) {
         dynamicType = <unset>, 
         changeOperation = <unset>, 
         spec = (vim.host.PortGroup.Specification) {
            dynamicType = <unset>, 
            name = "2465801_NIC1", 
            vlanId = 200, 
            vswitchName = "vSwitch1", 
            policy = (vim.host.NetworkPolicy) {
               dynamicType = <unset>, 
               security = (vim.host.NetworkPolicy.SecurityPolicy) {
                  dynamicType = <unset>, 
                  allowPromiscuous = <unset>, 
                  macChanges = <unset>, 
                  forgedTransmits = <unset>, 
               }, 
               nicTeaming = (vim.host.NetworkPolicy.NicTeamingPolicy) {
                  dynamicType = <unset>, 
                  policy = <unset>, 
                  reversePolicy = <unset>, 
                  notifySwitches = <unset>, 
                  rollingOrder = <unset>, 
                  failureCriteria = (vim.host.NetworkPolicy.NicFailureCriteria) {
                     dynamicType = <unset>, 
                     checkSpeed = <unset>, 
                     speed = <unset>, 
                     checkDuplex = <unset>, 
                     fullDuplex = <unset>, 
                     checkErrorPercent = <unset>, 
                     percentage = <unset>, 
                     checkBeacon = <unset>, 
                  }, 
                  nicOrder = (vim.host.NetworkPolicy.NicOrderPolicy) null, 
               }, 
               offloadPolicy = (vim.host.NetOffloadCapabilities) {
                  dynamicType = <unset>, 
                  csumOffload = <unset>, 
                  tcpSegmentation = <unset>, 
                  zeroCopyXmit = <unset>, 
               }, 
               shapingPolicy = (vim.host.NetworkPolicy.TrafficShapingPolicy) {
                  dynamicType = <unset>, 
                  enabled = <unset>, 
                  averageBandwidth = <unset>, 
                  peakBandwidth = <unset>, 
                  burstSize = <unset>, 
               }, 
            }, 
         }, 
      }, 
      (vim.host.PortGroup.Config) {
         dynamicType = <unset>, 
         changeOperation = <unset>, 
         spec = (vim.host.PortGroup.Specification) {
            dynamicType = <unset>, 
            name = "2749301_NIC1", 
            vlanId = 200, 
            vswitchName = "vSwitch1", 
            policy = (vim.host.NetworkPolicy) {
               dynamicType = <unset>, 
               security = (vim.host.NetworkPolicy.SecurityPolicy) {
                  dynamicType = <unset>, 
                  allowPromiscuous = <unset>, 
                  macChanges = <unset>, 
                  forgedTransmits = <unset>, 
               }, 
               nicTeaming = (vim.host.NetworkPolicy.NicTeamingPolicy) {
                  dynamicType = <unset>, 
                  policy = <unset>, 
                  reversePolicy = <unset>, 
                  notifySwitches = <unset>, 
                  rollingOrder = <unset>, 
                  failureCriteria = (vim.host.NetworkPolicy.NicFailureCriteria) {
                     dynamicType = <unset>, 
                     checkSpeed = <unset>, 
                     speed = <unset>, 
                     checkDuplex = <unset>, 
                     fullDuplex = <unset>, 
                     checkErrorPercent = <unset>, 
                     percentage = <unset>, 
                     checkBeacon = <unset>, 
                  }, 
                  nicOrder = (vim.host.NetworkPolicy.NicOrderPolicy) null, 
               }, 
               offloadPolicy = (vim.host.NetOffloadCapabilities) {
                  dynamicType = <unset>, 
                  csumOffload = <unset>, 
                  tcpSegmentation = <unset>, 
                  zeroCopyXmit = <unset>, 
               }, 
               shapingPolicy = (vim.host.NetworkPolicy.TrafficShapingPolicy) {
                  dynamicType = <unset>, 
                  enabled = <unset>, 
                  averageBandwidth = <unset>, 
                  peakBandwidth = <unset>, 
                  burstSize = <unset>, 
               }, 
            }, 
         }, 
      }, 
      (vim.host.PortGroup.Config) {
         dynamicType = <unset>, 
         changeOperation = <unset>, 
         spec = (vim.host.PortGroup.Specification) {
            dynamicType = <unset>, 
            name = "1904701_NIC1", 
            vlanId = 200, 
            vswitchName = "vSwitch1", 
            policy = (vim.host.NetworkPolicy) {
               dynamicType = <unset>, 
               security = (vim.host.NetworkPolicy.SecurityPolicy) {
                  dynamicType = <unset>, 
                  allowPromiscuous = <unset>, 
                  macChanges = <unset>, 
                  forgedTransmits = <unset>, 
               }, 
               nicTeaming = (vim.host.NetworkPolicy.NicTeamingPolicy) {
                  dynamicType = <unset>, 
                  policy = <unset>, 
                  reversePolicy = <unset>, 
                  notifySwitches = <unset>, 
                  rollingOrder = <unset>, 
                  failureCriteria = (vim.host.NetworkPolicy.NicFailureCriteria) {
                     dynamicType = <unset>, 
                     checkSpeed = <unset>, 
                     speed = <unset>, 
                     checkDuplex = <unset>, 
                     fullDuplex = <unset>, 
                     checkErrorPercent = <unset>, 
                     percentage = <unset>, 
                     checkBeacon = <unset>, 
                  }, 
                  nicOrder = (vim.host.NetworkPolicy.NicOrderPolicy) null, 
               }, 
               offloadPolicy = (vim.host.NetOffloadCapabilities) {
                  dynamicType = <unset>, 
                  csumOffload = <unset>, 
                  tcpSegmentation = <unset>, 
                  zeroCopyXmit = <unset>, 
               }, 
               shapingPolicy = (vim.host.NetworkPolicy.TrafficShapingPolicy) {
                  dynamicType = <unset>, 
                  enabled = <unset>, 
                  averageBandwidth = <unset>, 
                  peakBandwidth = <unset>, 
                  burstSize = <unset>, 
               }, 
            }, 
         }, 
      }, 
      (vim.host.PortGroup.Config) {
         dynamicType = <unset>, 
         changeOperation = <unset>, 
         spec = (vim.host.PortGroup.Specification) {
            dynamicType = <unset>, 
            name = "1957001_NIC1", 
            vlanId = 200, 
            vswitchName = "vSwitch1", 
            policy = (vim.host.NetworkPolicy) {
               dynamicType = <unset>, 
               security = (vim.host.NetworkPolicy.SecurityPolicy) {
                  dynamicType = <unset>, 
                  allowPromiscuous = <unset>, 
                  macChanges = <unset>, 
                  forgedTransmits = <unset>, 
               }, 
               nicTeaming = (vim.host.NetworkPolicy.NicTeamingPolicy) {
                  dynamicType = <unset>, 
                  policy = <unset>, 
                  reversePolicy = <unset>, 
                  notifySwitches = <unset>, 
                  rollingOrder = <unset>, 
                  failureCriteria = (vim.host.NetworkPolicy.NicFailureCriteria) {
                     dynamicType = <unset>, 
                     checkSpeed = <unset>, 
                     speed = <unset>, 
                     checkDuplex = <unset>, 
                     fullDuplex = <unset>, 
                     checkErrorPercent = <unset>, 
                     percentage = <unset>, 
                     checkBeacon = <unset>, 
                  }, 
                  nicOrder = (vim.host.NetworkPolicy.NicOrderPolicy) null, 
               }, 
               offloadPolicy = (vim.host.NetOffloadCapabilities) {
                  dynamicType = <unset>, 
                  csumOffload = <unset>, 
                  tcpSegmentation = <unset>, 
                  zeroCopyXmit = <unset>, 
               }, 
               shapingPolicy = (vim.host.NetworkPolicy.TrafficShapingPolicy) {
                  dynamicType = <unset>, 
                  enabled = <unset>, 
                  averageBandwidth = <unset>, 
                  peakBandwidth = <unset>, 
                  burstSize = <unset>, 
               }, 
            }, 
         }, 
      }, 
      (vim.host.PortGroup.Config) {
         dynamicType = <unset>, 
         changeOperation = <unset>, 
         spec = (vim.host.PortGroup.Specification) {
            dynamicType = <unset>, 
            name = "1018701_NIC1", 
            vlanId = 200, 
            vswitchName = "vSwitch1", 
            policy = (vim.host.NetworkPolicy) {
               dynamicType = <unset>, 
               security = (vim.host.NetworkPolicy.SecurityPolicy) {
                  dynamicType = <unset>, 
                  allowPromiscuous = <unset>, 
                  macChanges = <unset>, 
                  forgedTransmits = <unset>, 
               }, 
               nicTeaming = (vim.host.NetworkPolicy.NicTeamingPolicy) {
                  dynamicType = <unset>, 
                  policy = <unset>, 
                  reversePolicy = <unset>, 
                  notifySwitches = <unset>, 
                  rollingOrder = <unset>, 
                  failureCriteria = (vim.host.NetworkPolicy.NicFailureCriteria) {
                     dynamicType = <unset>, 
                     checkSpeed = <unset>, 
                     speed = <unset>, 
                     checkDuplex = <unset>, 
                     fullDuplex = <unset>, 
                     checkErrorPercent = <unset>, 
                     percentage = <unset>, 
                     checkBeacon = <unset>, 
                  }, 
                  nicOrder = (vim.host.NetworkPolicy.NicOrderPolicy) null, 
               }, 
               offloadPolicy = (vim.host.NetOffloadCapabilities) {
                  dynamicType = <unset>, 
                  csumOffload = <unset>, 
                  tcpSegmentation = <unset>, 
                  zeroCopyXmit = <unset>, 
               }, 
               shapingPolicy = (vim.host.NetworkPolicy.TrafficShapingPolicy) {
                  dynamicType = <unset>, 
                  enabled = <unset>, 
                  averageBandwidth = <unset>, 
                  peakBandwidth = <unset>, 
                  burstSize = <unset>, 
               }, 
            }, 
         }, 
      }, 
      (vim.host.PortGroup.Config) {
         dynamicType = <unset>, 
         changeOperation = <unset>, 
         spec = (vim.host.PortGroup.Specification) {
            dynamicType = <unset>, 
            name = "2433501_NIC1", 
            vlanId = 200, 
            vswitchName = "vSwitch1", 
            policy = (vim.host.NetworkPolicy) {
               dynamicType = <unset>, 
               security = (vim.host.NetworkPolicy.SecurityPolicy) {
                  dynamicType = <unset>, 
                  allowPromiscuous = <unset>, 
                  macChanges = <unset>, 
                  forgedTransmits = <unset>, 
               }, 
               nicTeaming = (vim.host.NetworkPolicy.NicTeamingPolicy) {
                  dynamicType = <unset>, 
                  policy = <unset>, 
                  reversePolicy = <unset>, 
                  notifySwitches = <unset>, 
                  rollingOrder = <unset>, 
                  failureCriteria = (vim.host.NetworkPolicy.NicFailureCriteria) {
                     dynamicType = <unset>, 
                     checkSpeed = <unset>, 
                     speed = <unset>, 
                     checkDuplex = <unset>, 
                     fullDuplex = <unset>, 
                     checkErrorPercent = <unset>, 
                     percentage = <unset>, 
                     checkBeacon = <unset>, 
                  }, 
                  nicOrder = (vim.host.NetworkPolicy.NicOrderPolicy) null, 
               }, 
               offloadPolicy = (vim.host.NetOffloadCapabilities) {
                  dynamicType = <unset>, 
                  csumOffload = <unset>, 
                  tcpSegmentation = <unset>, 
                  zeroCopyXmit = <unset>, 
               }, 
               shapingPolicy = (vim.host.NetworkPolicy.TrafficShapingPolicy) {
                  dynamicType = <unset>, 
                  enabled = <unset>, 
                  averageBandwidth = <unset>, 
                  peakBandwidth = <unset>, 
                  burstSize = <unset>, 
               }, 
            }, 
         }, 
      }, 
      (vim.host.PortGroup.Config) {
         dynamicType = <unset>, 
         changeOperation = <unset>, 
         spec = (vim.host.PortGroup.Specification) {
            dynamicType = <unset>, 
            name = "977101_NIC1", 
            vlanId = 200, 
            vswitchName = "vSwitch1", 
            policy = (vim.host.NetworkPolicy) {
               dynamicType = <unset>, 
               security = (vim.host.NetworkPolicy.SecurityPolicy) {
                  dynamicType = <unset>, 
                  allowPromiscuous = <unset>, 
                  macChanges = <unset>, 
                  forgedTransmits = <unset>, 
               }, 
               nicTeaming = (vim.host.NetworkPolicy.NicTeamingPolicy) {
                  dynamicType = <unset>, 
                  policy = <unset>, 
                  reversePolicy = <unset>, 
                  notifySwitches = <unset>, 
                  rollingOrder = <unset>, 
                  failureCriteria = (vim.host.NetworkPolicy.NicFailureCriteria) {
                     dynamicType = <unset>, 
                     checkSpeed = <unset>, 
                     speed = <unset>, 
                     checkDuplex = <unset>, 
                     fullDuplex = <unset>, 
                     checkErrorPercent = <unset>, 
                     percentage = <unset>, 
                     checkBeacon = <unset>, 
                  }, 
                  nicOrder = (vim.host.NetworkPolicy.NicOrderPolicy) null, 
               }, 
               offloadPolicy = (vim.host.NetOffloadCapabilities) {
                  dynamicType = <unset>, 
                  csumOffload = <unset>, 
                  tcpSegmentation = <unset>, 
                  zeroCopyXmit = <unset>, 
               }, 
               shapingPolicy = (vim.host.NetworkPolicy.TrafficShapingPolicy) {
                  dynamicType = <unset>, 
                  enabled = <unset>, 
                  averageBandwidth = <unset>, 
                  peakBandwidth = <unset>, 
                  burstSize = <unset>, 
               }, 
            }, 
         }, 
      }, 
      (vim.host.PortGroup.Config) {
         dynamicType = <unset>, 
         changeOperation = <unset>, 
         spec = (vim.host.PortGroup.Specification) {
            dynamicType = <unset>, 
            name = "974101_NIC1", 
            vlanId = 200, 
            vswitchName = "vSwitch1", 
            policy = (vim.host.NetworkPolicy) {
               dynamicType = <unset>, 
               security = (vim.host.NetworkPolicy.SecurityPolicy) {
                  dynamicType = <unset>, 
                  allowPromiscuous = <unset>, 
                  macChanges = <unset>, 
                  forgedTransmits = <unset>, 
               }, 
               nicTeaming = (vim.host.NetworkPolicy.NicTeamingPolicy) {
                  dynamicType = <unset>, 
                  policy = <unset>, 
                  reversePolicy = <unset>, 
                  notifySwitches = <unset>, 
                  rollingOrder = <unset>, 
                  failureCriteria = (vim.host.NetworkPolicy.NicFailureCriteria) {
                     dynamicType = <unset>, 
                     checkSpeed = <unset>, 
                     speed = <unset>, 
                     checkDuplex = <unset>, 
                     fullDuplex = <unset>, 
                     checkErrorPercent = <unset>, 
                     percentage = <unset>, 
                     checkBeacon = <unset>, 
                  }, 
                  nicOrder = (vim.host.NetworkPolicy.NicOrderPolicy) null, 
               }, 
               offloadPolicy = (vim.host.NetOffloadCapabilities) {
                  dynamicType = <unset>, 
                  csumOffload = <unset>, 
                  tcpSegmentation = <unset>, 
                  zeroCopyXmit = <unset>, 
               }, 
               shapingPolicy = (vim.host.NetworkPolicy.TrafficShapingPolicy) {
                  dynamicType = <unset>, 
                  enabled = <unset>, 
                  averageBandwidth = <unset>, 
                  peakBandwidth = <unset>, 
                  burstSize = <unset>, 
               }, 
            }, 
         }, 
      }, 
      (vim.host.PortGroup.Config) {
         dynamicType = <unset>, 
         changeOperation = <unset>, 
         spec = (vim.host.PortGroup.Specification) {
            dynamicType = <unset>, 
            name = "32101_NIC1", 
            vlanId = 200, 
            vswitchName = "vSwitch1", 
            policy = (vim.host.NetworkPolicy) {
               dynamicType = <unset>, 
               security = (vim.host.NetworkPolicy.SecurityPolicy) {
                  dynamicType = <unset>, 
                  allowPromiscuous = <unset>, 
                  macChanges = <unset>, 
                  forgedTransmits = <unset>, 
               }, 
               nicTeaming = (vim.host.NetworkPolicy.NicTeamingPolicy) {
                  dynamicType = <unset>, 
                  policy = <unset>, 
                  reversePolicy = <unset>, 
                  notifySwitches = <unset>, 
                  rollingOrder = <unset>, 
                  failureCriteria = (vim.host.NetworkPolicy.NicFailureCriteria) {
                     dynamicType = <unset>, 
                     checkSpeed = <unset>, 
                     speed = <unset>, 
                     checkDuplex = <unset>, 
                     fullDuplex = <unset>, 
                     checkErrorPercent = <unset>, 
                     percentage = <unset>, 
                     checkBeacon = <unset>, 
                  }, 
                  nicOrder = (vim.host.NetworkPolicy.NicOrderPolicy) null, 
               }, 
               offloadPolicy = (vim.host.NetOffloadCapabilities) {
                  dynamicType = <unset>, 
                  csumOffload = <unset>, 
                  tcpSegmentation = <unset>, 
                  zeroCopyXmit = <unset>, 
               }, 
               shapingPolicy = (vim.host.NetworkPolicy.TrafficShapingPolicy) {
                  dynamicType = <unset>, 
                  enabled = <unset>, 
                  averageBandwidth = <unset>, 
                  peakBandwidth = <unset>, 
                  burstSize = <unset>, 
               }, 
            }, 
         }, 
      }, 
      (vim.host.PortGroup.Config) {
         dynamicType = <unset>, 
         changeOperation = <unset>, 
         spec = (vim.host.PortGroup.Specification) {
            dynamicType = <unset>, 
            name = "516201_NIC1", 
            vlanId = 200, 
            vswitchName = "vSwitch1", 
            policy = (vim.host.NetworkPolicy) {
               dynamicType = <unset>, 
               security = (vim.host.NetworkPolicy.SecurityPolicy) {
                  dynamicType = <unset>, 
                  allowPromiscuous = <unset>, 
                  macChanges = <unset>, 
                  forgedTransmits = <unset>, 
               }, 
               nicTeaming = (vim.host.NetworkPolicy.NicTeamingPolicy) {
                  dynamicType = <unset>, 
                  policy = <unset>, 
                  reversePolicy = <unset>, 
                  notifySwitches = <unset>, 
                  rollingOrder = <unset>, 
                  failureCriteria = (vim.host.NetworkPolicy.NicFailureCriteria) {
                     dynamicType = <unset>, 
                     checkSpeed = <unset>, 
                     speed = <unset>, 
                     checkDuplex = <unset>, 
                     fullDuplex = <unset>, 
                     checkErrorPercent = <unset>, 
                     percentage = <unset>, 
                     checkBeacon = <unset>, 
                  }, 
                  nicOrder = (vim.host.NetworkPolicy.NicOrderPolicy) null, 
               }, 
               offloadPolicy = (vim.host.NetOffloadCapabilities) {
                  dynamicType = <unset>, 
                  csumOffload = <unset>, 
                  tcpSegmentation = <unset>, 
                  zeroCopyXmit = <unset>, 
               }, 
               shapingPolicy = (vim.host.NetworkPolicy.TrafficShapingPolicy) {
                  dynamicType = <unset>, 
                  enabled = <unset>, 
                  averageBandwidth = <unset>, 
                  peakBandwidth = <unset>, 
                  burstSize = <unset>, 
               }, 
            }, 
         }, 
      }, 
      (vim.host.PortGroup.Config) {
         dynamicType = <unset>, 
         changeOperation = <unset>, 
         spec = (vim.host.PortGroup.Specification) {
            dynamicType = <unset>, 
            name = "ENV1400_317721_NIC1", 
            vlanId = 200, 
            vswitchName = "vSwitch1", 
            policy = (vim.host.NetworkPolicy) {
               dynamicType = <unset>, 
               security = (vim.host.NetworkPolicy.SecurityPolicy) {
                  dynamicType = <unset>, 
                  allowPromiscuous = <unset>, 
                  macChanges = <unset>, 
                  forgedTransmits = <unset>, 
               }, 
               nicTeaming = (vim.host.NetworkPolicy.NicTeamingPolicy) {
                  dynamicType = <unset>, 
                  policy = <unset>, 
                  reversePolicy = <unset>, 
                  notifySwitches = <unset>, 
                  rollingOrder = <unset>, 
                  failureCriteria = (vim.host.NetworkPolicy.NicFailureCriteria) {
                     dynamicType = <unset>, 
                     checkSpeed = <unset>, 
                     speed = <unset>, 
                     checkDuplex = <unset>, 
                     fullDuplex = <unset>, 
                     checkErrorPercent = <unset>, 
                     percentage = <unset>, 
                     checkBeacon = <unset>, 
                  }, 
                  nicOrder = (vim.host.NetworkPolicy.NicOrderPolicy) null, 
               }, 
               offloadPolicy = (vim.host.NetOffloadCapabilities) {
                  dynamicType = <unset>, 
                  csumOffload = <unset>, 
                  tcpSegmentation = <unset>, 
                  zeroCopyXmit = <unset>, 
               }, 
               shapingPolicy = (vim.host.NetworkPolicy.TrafficShapingPolicy) {
                  dynamicType = <unset>, 
                  enabled = <unset>, 
                  averageBandwidth = <unset>, 
                  peakBandwidth = <unset>, 
                  burstSize = <unset>, 
               }, 
            }, 
         }, 
      }, 
      (vim.host.PortGroup.Config) {
         dynamicType = <unset>, 
         changeOperation = <unset>, 
         spec = (vim.host.PortGroup.Specification) {
            dynamicType = <unset>, 
            name = "VM Network", 
            vlanId = 200, 
            vswitchName = "vSwitch1", 
            policy = (vim.host.NetworkPolicy) {
               dynamicType = <unset>, 
               security = (vim.host.NetworkPolicy.SecurityPolicy) {
                  dynamicType = <unset>, 
                  allowPromiscuous = <unset>, 
                  macChanges = <unset>, 
                  forgedTransmits = <unset>, 
               }, 
               nicTeaming = (vim.host.NetworkPolicy.NicTeamingPolicy) {
                  dynamicType = <unset>, 
                  policy = <unset>, 
                  reversePolicy = <unset>, 
                  notifySwitches = <unset>, 
                  rollingOrder = <unset>, 
                  failureCriteria = (vim.host.NetworkPolicy.NicFailureCriteria) {
                     dynamicType = <unset>, 
                     checkSpeed = <unset>, 
                     speed = <unset>, 
                     checkDuplex = <unset>, 
                     fullDuplex = <unset>, 
                     checkErrorPercent = <unset>, 
                     percentage = <unset>, 
                     checkBeacon = <unset>, 
                  }, 
                  nicOrder = (vim.host.NetworkPolicy.NicOrderPolicy) null, 
               }, 
               offloadPolicy = (vim.host.NetOffloadCapabilities) {
                  dynamicType = <unset>, 
                  csumOffload = <unset>, 
                  tcpSegmentation = <unset>, 
                  zeroCopyXmit = <unset>, 
               }, 
               shapingPolicy = (vim.host.NetworkPolicy.TrafficShapingPolicy) {
                  dynamicType = <unset>, 
                  enabled = <unset>, 
                  averageBandwidth = <unset>, 
                  peakBandwidth = <unset>, 
                  burstSize = <unset>, 
               }, 
            }, 
         }, 
      }, 
      (vim.host.PortGroup.Config) {
         dynamicType = <unset>, 
         changeOperation = <unset>, 
         spec = (vim.host.PortGroup.Specification) {
            dynamicType = <unset>, 
            name = "VMotion", 
            vlanId = 0, 
            vswitchName = "vSwitch2", 
            policy = (vim.host.NetworkPolicy) {
               dynamicType = <unset>, 
               security = (vim.host.NetworkPolicy.SecurityPolicy) {
                  dynamicType = <unset>, 
                  allowPromiscuous = <unset>, 
                  macChanges = <unset>, 
                  forgedTransmits = <unset>, 
               }, 
               nicTeaming = (vim.host.NetworkPolicy.NicTeamingPolicy) {
                  dynamicType = <unset>, 
                  policy = <unset>, 
                  reversePolicy = <unset>, 
                  notifySwitches = <unset>, 
                  rollingOrder = <unset>, 
                  failureCriteria = (vim.host.NetworkPolicy.NicFailureCriteria) {
                     dynamicType = <unset>, 
                     checkSpeed = <unset>, 
                     speed = <unset>, 
                     checkDuplex = <unset>, 
                     fullDuplex = <unset>, 
                     checkErrorPercent = <unset>, 
                     percentage = <unset>, 
                     checkBeacon = <unset>, 
                  }, 
                  nicOrder = (vim.host.NetworkPolicy.NicOrderPolicy) null, 
               }, 
               offloadPolicy = (vim.host.NetOffloadCapabilities) {
                  dynamicType = <unset>, 
                  csumOffload = <unset>, 
                  tcpSegmentation = <unset>, 
                  zeroCopyXmit = <unset>, 
               }, 
               shapingPolicy = (vim.host.NetworkPolicy.TrafficShapingPolicy) {
                  dynamicType = <unset>, 
                  enabled = <unset>, 
                  averageBandwidth = <unset>, 
                  peakBandwidth = <unset>, 
                  burstSize = <unset>, 
               }, 
            }, 
         }, 
      }
   ], 
   pnic = (vim.host.PhysicalNic.Config) [
      (vim.host.PhysicalNic.Config) {
         dynamicType = <unset>, 
         device = "vmnic0", 
         spec = (vim.host.PhysicalNic.Specification) {
            dynamicType = <unset>, 
            ip = (vim.host.IpConfig) {
               dynamicType = <unset>, 
               dhcp = false, 
               ipAddress = "", 
               subnetMask = "", 
               ipV6Config = (vim.host.IpConfig.IpV6AddressConfiguration) null, 
            }, 
            linkSpeed = (vim.host.PhysicalNic.LinkSpeedDuplex) null, 
         }, 
      }, 
      (vim.host.PhysicalNic.Config) {
         dynamicType = <unset>, 
         device = "vmnic1", 
         spec = (vim.host.PhysicalNic.Specification) {
            dynamicType = <unset>, 
            ip = (vim.host.IpConfig) {
               dynamicType = <unset>, 
               dhcp = false, 
               ipAddress = "", 
               subnetMask = "", 
               ipV6Config = (vim.host.IpConfig.IpV6AddressConfiguration) null, 
            }, 
            linkSpeed = (vim.host.PhysicalNic.LinkSpeedDuplex) null, 
         }, 
      }, 
      (vim.host.PhysicalNic.Config) {
         dynamicType = <unset>, 
         device = "vmnic2", 
         spec = (vim.host.PhysicalNic.Specification) {
            dynamicType = <unset>, 
            ip = (vim.host.IpConfig) {
               dynamicType = <unset>, 
               dhcp = false, 
               ipAddress = "", 
               subnetMask = "", 
               ipV6Config = (vim.host.IpConfig.IpV6AddressConfiguration) null, 
            }, 
            linkSpeed = (vim.host.PhysicalNic.LinkSpeedDuplex) null, 
         }, 
      }, 
      (vim.host.PhysicalNic.Config) {
         dynamicType = <unset>, 
         device = "vmnic3", 
         spec = (vim.host.PhysicalNic.Specification) {
            dynamicType = <unset>, 
            ip = (vim.host.IpConfig) {
               dynamicType = <unset>, 
               dhcp = false, 
               ipAddress = "", 
               subnetMask = "", 
               ipV6Config = (vim.host.IpConfig.IpV6AddressConfiguration) null, 
            }, 
            linkSpeed = (vim.host.PhysicalNic.LinkSpeedDuplex) null, 
         }, 
      }
   ], 
   vnic = (vim.host.VirtualNic.Config) [
      (vim.host.VirtualNic.Config) {
         dynamicType = <unset>, 
         changeOperation = <unset>, 
         device = "vmk0", 
         portgroup = "Management Network", 
         spec = (vim.host.VirtualNic.Specification) {
            dynamicType = <unset>, 
            ip = (vim.host.IpConfig) {
               dynamicType = <unset>, 
               dhcp = false, 
               ipAddress = "10.102.246.96", 
               subnetMask = "255.255.255.192", 
               ipV6Config = (vim.host.IpConfig.IpV6AddressConfiguration) null, 
            }, 
            mac = "b4:b5:2f:39:c0:a4", 
            distributedVirtualPort = (vim.dvs.PortConnection) null, 
            portgroup = "Management Network", 
            mtu = 1500, 
            tsoEnabled = true, 
         }, 
      }, 
      (vim.host.VirtualNic.Config) {
         dynamicType = <unset>, 
         changeOperation = <unset>, 
         device = "vmk1", 
         portgroup = "VMotion", 
         spec = (vim.host.VirtualNic.Specification) {
            dynamicType = <unset>, 
            ip = (vim.host.IpConfig) {
               dynamicType = <unset>, 
               dhcp = false, 
               ipAddress = "10.102.246.116", 
               subnetMask = "255.255.255.192", 
               ipV6Config = (vim.host.IpConfig.IpV6AddressConfiguration) null, 
            }, 
            mac = "00:50:56:69:07:23", 
            distributedVirtualPort = (vim.dvs.PortConnection) null, 
            portgroup = "VMotion", 
            mtu = 1500, 
            tsoEnabled = true, 
         }, 
      }
   ], 
   dnsConfig = (vim.host.DnsConfig) {
      dynamicType = <unset>, 
      dhcp = false, 
      virtualNicDevice = <unset>, 
      hostName = "wgcvsh006", 
      domainName = "ir.intel.com", 
      address = (string) [
         "10.248.2.1", 
         "10.102.246.99"
      ], 
      searchDomain = (string) [
         "ir.intel.com", 
         "ger.corp.intel.com"
      ], 
   }, 
   ipRouteConfig = (vim.host.IpRouteConfig) null, 
   consoleIpRouteConfig = (vim.host.IpRouteConfig) null, 
   routeTableConfig = (vim.host.IpRouteTableConfig) null, 
   ipV6Enabled = false, 
   ipSecConfig = (vim.host.IpSecConfig) null, 
   consoleIpSecConfig = (vim.host.IpSecConfig) null, 
}
